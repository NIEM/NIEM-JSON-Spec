#!@bash@

set -o nounset -o errexit -o pipefail

. "$HOME"/share/wrtools-core/opt_help.bash
. "$HOME"/share/wrtools-core/fail.bash
. "$HOME"/share/wrtools-core/opt_verbose.bash

#HELP:COMMAND_NAME: Run some convenient stuff
#HELP:Usage: COMMAND_NAME $global-options* $command ...

default_command=( depend oh all validate )
#HELP:The default command is: "depend oh all validate"

#HELP:global-options:
#HELP:  --help | -h: Print this help
#HELP:  --verbose, -v: Print additional diagnostics

#HELP:    -j ${number of jobs}: run this many jobs in parallel
#HELP:        default = number of processing units available
number_of_jobs=$(nproc)

OPTIND=1
while getopts :hj:v-: option
do
    case "$option" in
        v ) opt_verbose;;
        h ) opt_help;;
        j )
            if ! printf -v number_of_jobs '%d' "$OPTARG"
            then fail "Error: parameter to -j must be a number (got \"$OPTARG\")"
            fi;;
        - )
            case "$OPTARG" in
                help ) opt_help;;
                help=* ) fail "Long option \"${OPTARG%%=*}\" has an unexpected argument";;
                verbose ) opt_verbose;;
                verbose=* ) fail "Long option \"${OPTARG%%=*}\" has unexpected argument";;
                * ) fail "Unknown long option \"${OPTARG%%=*}\"";;
            esac
            ;;  
        '?' ) fail "unknown option \"$OPTARG\"";;
        : ) fail "option \"$OPTARG\" missing argument";;
        * ) assert false;;
    esac
done
shift $((OPTIND - 1))

#HELP:Commands:

if (( $# == 0 ))
then set -- "${default_command[@]}"
fi

while (( $# > 0 ))
do
    command=$1
    shift
    
    case $command in
        #HELP:  help: print this help
        help )
            opt_help
            ;;

        #HELP:  reconfigure: Re-run configure with the current known parameters
        reconfigure )
            @srcdir@/configure
            ;;

        #HELP:  depend | d: Build document dependencies
        depend | d )
            vrun make depend depend=build
            ;;

        #HELP:  oh: "Open HTML": Quickly build the HTML file and open it.
        oh )
            vrun make -j "${number_of_jobs}" html
            open build/niem-json-spec.html
            ;;

        #HELP:  all: Build all published artifacts
        all )
            vrun make  -j "${number_of_jobs}"
            ;;

        #HELP:  validate: Run spell checks and valdiate whatever can be validated
        validate )
            vrun make spell
            ;;

        #HELP:  rebuild: Clean and then rebuild stuff starting from nothing.
        #HELP:      Default is to build & install everything. Provide targets if you want to
        #HELP:      build something specific.
        rebuild )
            make clean
            set -- depend all validate "$@"
            ;;
        * )
            fail "Unknown command \"$1\"";;
    esac
done
